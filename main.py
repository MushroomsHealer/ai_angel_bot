import os
import openai
from fastapi import FastAPI, Request
from telegram import Bot, Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters

TELEGRAM_TOKEN = os.environ.get('TELEGRAM_TOKEN', '–¢–í–û–ô_–¢–û–ö–ï–ù_–û–¢_BOTFATHER')
OPENAI_KEY = os.environ.get('OPENAI_KEY', '–¢–í–û–ô_OPENAI_API_KEY')

app = FastAPI()
bot = Bot(token=TELEGRAM_TOKEN)

# –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ telegram-–±–æ—Ç–∞ (asynchronous!)
application = Application.builder().token(TELEGRAM_TOKEN).build()

# /start handler
async def start(update, context):
    kb = [['üè† –ñ–∏–ª—å—ë', 'üçú –ï–¥–∞'], ['üöó –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç', 'üö® –ü–æ–º–æ—â—å']]
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø ANGEL, —Ç–≤–æ–π AI-–ø–æ–º–æ—â–Ω–∏–∫ –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?",
        reply_markup=ReplyKeyboardMarkup(kb, resize_keyboard=True)
    )

# –°–æ–æ–±—â–µ–Ω–∏—è
async def handle_message(update, context):
    user_msg = update.message.text
    openai.api_key = OPENAI_KEY
    response = openai.ChatCompletion.create(
        model="gpt-4o",
        messages=[
            {"role": "system", "content": "–¢—ã ANGEL ‚Äî AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞. –û—Ç–≤–µ—á–∞–π –∫–æ—Ä–æ—Ç–∫–æ, —Ç–µ–ø–ª–æ, –ø–æ –¥–µ–ª—É, –ø—Ä–µ–¥–ª–∞–≥–∞–π –ø–æ–ª–µ–∑–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã."},
            {"role": "user", "content": user_msg}
        ]
    )
    text = response['choices'][0]['message']['content']
    await update.message.reply_text(text)

application.add_handler(CommandHandler("start", start))
application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

# FastAPI endpoint –¥–ª—è Telegram webhook
@app.post("/")
async def process_webhook(request: Request):
    data = await request.json()
    update = Update.de_json(data, bot)
    await application.process_update(update)
    return {"ok": True}
